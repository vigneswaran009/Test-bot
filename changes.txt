const botconfig = require("./botconfig.json");
const tokenfile = require("./token.json");
const Discord = require("discord.js");
const fs = require("fs");
const bot = new Discord.Client({disableEveryone: true});
bot.commands = new Discord.Collection();

fs.readdir("./commands/", (err, files) => {

  if(err) console.log(err);
  let jsfile = files.filter(f => f.split(".").pop() === "js")
  if(jsfile.length <= 0){
    console.log("Couldn't find commands.");
    return;
  }

  jsfile.forEach((f, i) =>{
    let props = require(`./commands/${f}`);
    console.log(`${f} loaded!`);
    bot.commands.set(props.help.name, props);
  });
});

bot.on("ready", async () => {
  console.log(`${bot.user.username} is online on ${bot.guilds.size} servers!`);
  bot.user.setActivity("tutorials on TSC", {type: "WATCHING"});

});

bot.on("message", async message => {
  if(message.author.bot) return;
  if(message.channel.type === "dm") return;

  let prefix = botconfig.prefix;
  let messageArray = message.content.split(" ");
  let cmd = messageArray[0];
  let args = messageArray.slice(1);
  let commandfile = bot.commands.get(cmd.slice(prefix.length));
  if(commandfile) commandfile.run(bot,message,args);

});

bot.login(tokenfile.token);

-----------------------------------------------------------------------------------------------------
const botconfig = require("./botconfig.json");
const Discord = require("discord.js");
const moment = require('moment');

const bot = new Discord.Client({disableEveryone: true});



      


bot.on("ready",async()=>{
console.log(`${bot.user.username} is online`);
//bot.user.setGame("On SourceCade");
});
bot.on("message", async message =>{
    if(message.author.bot) return;
    if(message.channel.type === "dm") return;

    let prefix = botconfig.prefix;
    let messageArray = message.content.split(" ");
    let cmd = messageArray[0];
    let args = messageArray.slice(1);

    if(cmd === `${prefix}kick`){

    
        let kUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        if(!kUser) return message.channel.send("Can't find user!");
        let kReason = args.join(" ").slice(22);
        if(!message.member.hasPermission("MANAGE_MESSAGES")) return message.channel.send("No can do pal!");
        if(kUser.hasPermission("MANAGE_MESSAGES")) return message.channel.send("That person can't be kicked!");
    
        let kickEmbed = new Discord.RichEmbed()
        .setDescription("~Kick~")
        .setColor("#e56b00")
        .addField("Kicked User", `${kUser}`)
        .addField("Kicked By", `<@${message.author.id}>`)
        .addField("Kicked In", message.channel)
        .addField("Tiime", `${moment.utc(message.guild.createdAt).format('dddd, MMMM Do YYYY, HH:mm:ss')}`, true)
        .addField("Reason", kReason);
    
        let kickChannel = message.guild.channels.find(`name`, "incidents");
        if(!kickChannel) return message.channel.send("Can't find incidents channel.");

        message.guild.member(kUser).kick(kReason);
        kickChannel.send(kickEmbed);
    
        return;
      }
    
      

        

if(cmd === `${prefix}report`){
let rUser = message.guild.member(message.mentions.users.first()  || message.guild.members.get(args[0]));
if(!rUser) return message.channel.send("Couldn't find the User.");

let reason = args.join(" ").slice(22);

let reportEmbed = new Discord.RichEmbed()
.setDescription("Reports")
.setColor("#15f153")
.addField("Reported User", `${rUser}`)
.addField("Reported By",  `${message.author}`)
.addField("Channel", message.channel.name)
.addField("Time", `${moment.utc(message.guild.createdAt).format('dddd, MMMM Do YYYY, HH:mm:ss')}`, true)
.addField("Reason", reason);

let reportsChannel = message.guild.channels.find(`name`, "reports");
if(!reportsChannel) return message.channel.send("Couldn't find reports Channel");

message.delete().catch(O_o=>{});
reportsChannel.send(reportEmbed);

return;
}


    if(cmd  === `${prefix}serverinfo`){
        

        let bicon = bot.user.displayAvatarURL;
        let serverembed = new Discord.RichEmbed()
        .setColor("#b416ba").setThumbnail(bicon)
        .addField("Server Name", message.guild.name)
        .addField("Owner",message.guild.owner)
        .addField('Created at:', `${moment.utc(message.guild.createdAt).format('dddd, MMMM Do YYYY, HH:mm:ss')}`, true)
        .addField("Total Members", message.guild.memberCount)

        


        return message.channel.send(serverembed);

    }

    if(cmd === `${prefix}userinfo`){

        let member = message.mentions.members.first() || message.member,
  user = member.user;
  let embed = new Discord.RichEmbed()
  .setAuthor(user.username + '#' + user.discriminator, user.displayAvatarURL)
        .setDescription(`${user}`)
        .setColor(`RANDOM`)
        .setThumbnail(`${user.displayAvatarURL}`)
        .addField('Status:', user.presence.status, true)
        .addField('Joined:',  `${moment.utc(member.joinedAt).format('dddd, MMMM Do YYYY, HH:mm:ss')}`, true)
        //.addField('Joined :' `${moment(message.member.joinedAt).format('lll') + '\n*' + moment(new Date()).diff(message.member.joinedAt, 'days') + ' days ago*'}`, true)
        .addField('Roles:', member.roles.map(r => `${r}`).join('\n'), true)
        .addBlankField(true)
        .setFooter(`ID: ${user.id}`)
        .setTimestamp();
        
        return message.channel.send(embed);
    }
});
bot.login(botconfig.token);

